(func testNot ()
    (cond (not true) (return false))
    (not false))

(func testAnd ()
    (cond (not (and true true)) (return false))
    (cond (and true false) (return false))
    (cond (and false true) (return false))
    (not (and false false)))

(func testOr ()
    (and (or true true)
         (or true false)
         (or false true)
         (not (or false false))))

(func testXor ()
    (and (not (xor true true))
         (xor true false)
         (xor false true)
         (not (xor false false))))

; `and` and `or` are defined as regular functions, so they don't short-circuit.
(func testSideEffects ()
    (setq counter 0)
    (func increment ()
        (setq counter (plus counter 1))
        true)
    (and false (increment))
    (or true (increment))
    (equal counter 2))

(cond (testNot) null (return false))
(cond (testAnd) null (return false))
(and (testOr) (testSideEffects))
